---
# Source: cluster-operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-op
  namespace: default
  labels:
imagePullSecrets:
  - name: infobloxctokey

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cluster-operator
rules:
- apiGroups:
  - ""
  - "cluster-operator.infobloxopen.github.com"
  resources:
  - services
  - pods
  - secrets
  - clusters
  - clusters/status
  - events
  - configmaps
  - replicasets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: cluster-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-operator
subjects:
- kind: ServiceAccount
  name: cluster-op
  namespace: default
  
---
# Source: cluster-operator/templates/crds.yaml
# crds/*.yaml are not templated
# See: https://helm.sh/docs/topics/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.cluster-operator.infobloxopen.github.com
spec:
  group: cluster-operator.infobloxopen.github.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the clusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST
            resource this object represents. Servers may infer this from
            the endpoint the client submits requests to. Cannot be updated.
            In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster 
          properties:
            name:
              type: string
            config: 
              type: string
        status:
          description: ClusterStatus defines the observed state of Cluster 
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
# Source: cluster-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cluster-operator
  namespace: default
  labels:
    app.kubernetes.io/name: cluster-operator
    helm.sh/chart: cluster-operator-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: cluster-op
      containers:
        - name: cluster-operator
          image: "infobloxcto/cluster-operator:latest"
          imagePullPolicy: Always
          env:
          - name: OPERATOR_NAME
            value: cluster-operator
          - name: KOPS_STATE_STORE
            value: s3://kops.state.seizadi.infoblox.com
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: aws-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: aws-secrets
          resources:
            {}
            

---
# Source: cluster-operator/templates/space.yaml
apiVersion: spacecontroller.infoblox-cto.github.com/v1alpha1
kind: Space
metadata:
  name: aws-secrets
  namespace: default
spec:
  path: /cluster-operator/aws-secrets
  secretName: aws-secrets
  secrets:
    AWS_ACCESS_KEY_ID: VAULT
    AWS_SECRET_ACCESS_KEY: VAULT
  type: Opaque

---
apiVersion: spacecontroller.infoblox-cto.github.com/v1alpha1
kind: Space
metadata:
  name: infobloxctokey
  namespace: default
spec:
  path: /image-pull/infobloxctokey
  secretName: infobloxctokey
  secrets:
    config: VAULT
  type: kubernetes.io/dockerconfigjson

