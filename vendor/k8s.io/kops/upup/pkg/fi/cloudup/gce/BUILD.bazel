load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "gce_apitarget.go",
        "gce_cloud.go",
        "gce_url.go",
        "instancegroups.go",
        "labels.go",
        "mock_gce_cloud.go",
        "network.go",
        "op.go",
        "status.go",
        "utils.go",
        "wrappers.go",
    ],
    importpath = "k8s.io/kops/upup/pkg/fi/cloudup/gce",
    visibility = ["//visibility:public"],
    deps = [
        "//dnsprovider/pkg/dnsprovider:go_default_library",
        "//dnsprovider/pkg/dnsprovider/providers/google/clouddns:go_default_library",
        "//pkg/apis/kops:go_default_library",
        "//pkg/cloudinstances:go_default_library",
        "//protokube/pkg/etcd:go_default_library",
        "//upup/pkg/fi:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/oauth2/google:go_default_library",
        "//vendor/google.golang.org/api/compute/v0.beta:go_default_library",
        "//vendor/google.golang.org/api/googleapi:go_default_library",
        "//vendor/google.golang.org/api/iam/v1:go_default_library",
        "//vendor/google.golang.org/api/oauth2/v2:go_default_library",
        "//vendor/google.golang.org/api/storage/v1:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
    ],
)
