apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "cluster-operator.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cluster-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cluster-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "cluster-operator.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 8443
            name: webhook-api
          volumeMounts:
          - name: webhook-server-tls
            mountPath: /run/secrets/tls
            readOnly: true
          env:
          - name: OPERATOR_NAME
            value: {{ .Values.operatorName  }}
          - name: KOPS_STATE_STORE
            value: {{ .Values.stateStore }}
          - name: REAPER
            value: "{{ .Values.reaper }}"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.local }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.aws.secretKey  }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.aws.keyID }}
          - name: AWS_REGION
            value: {{ .Values.aws.region }}
          {{- end }}
          command: ["/bin/sh"]
          {{- if .Values.local }}
          args: ["-c", "/manager --development=false --kops.state.store=$KOPS_STATE_STORE --reaper=$REAPER --kops.cluster.dns.zone=$DNS_ZONE --aws.access.key.id=AWS_ACCESS_KEY_ID --aws.secret.access.key=AWS_SECRET_ACCESS_KEY"]
          {{- else }}
          args: ["-c", "/manager --development=false --kops.state.store=$KOPS_STATE_STORE --reaper=$REAPER --kops.cluster.dns.zone=$DNS_ZONE"]
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: webhook-server-tls
          secret:
            secretName: {{ .Release.Name }}-webhook-server-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
     {{- end }}
